{"version":3,"sources":["components/Footer/Footer.js","components/Aside/Search/Search.js","components/Aside/RadioButton.js","components/Aside/Filter/Filter.js","helpers/helpers.js","components/Main/Card/Card.js","components/Main/Pagination/Pagination.js","components/Main/Lists/Lists.js","components/Main/InnerPage/InnerPage.js","components/App.js","index.js"],"names":["Footer","className","href","target","rel","Search","sendSearch","searchData","forwardedRef","searchParams","setSearchParams","inputRef","useRef","onSubmit","e","preventDefault","current","value","handleSearches","description","location","page","ref","id","name","type","placeholder","RadioButton","label","checked","onChange","htmlFor","Filter","forwardRef","filterSearch","onValueChange","filterOptions","map","city","index","defaultChecked","isFulltime","action","checkDate","date","today","Date","getDate","created","day","checkUrl","url","URL","search","URLSearchParams","Number","toLowerCase","full_time","getData","params","storeData","storeBackup","load","a","fetch","jsonData","json","data","console","log","getPosition","coords","latitude","longitude","Card","innerKey","jobId","setJobId","onClick","display","company_logo","src","alt","company","title","created_at","Pagination","currentPage","dataPerPage","totalData","paginate","currentPageAllData","paginateAllData","pageNumbers","i","Math","ceil","push","pageAllData","key","textIcon","number","leftNeighbor","indexOf","rightNeighbor","pageNeighbors","neighborNumber","uuidv4","length","Lists","pagination","renderCard","job","backupData","InnerPage","allData","pageState","filter","descRef","emailRef","useEffect","innerHTML","how_to_apply","App","currentData","useState","isLoading","setIsLoading","useLoading","loading","indicator","width","containerProps","indicatorEl","setAllData","setBackupData","setCurrentPage","getUserLocation","navigator","geolocation","getCurrentPosition","inputLocationRef","getAllData","indexLast","indexFirst","slice","pageNumber","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.991c7f8f.chunk.js","sourcesContent":["import 'components/Footer/Footer.css';\n\nconst Footer = () => {\n  return (\n    <footer className=\"app-footer\">\n      <small className=\"copyright\">\n        {`created by `}\n        <b>\n          <a href=\"https://github.com/gitraya\" target=\"_blank\" rel=\"noreferrer\">\n            gitraya\n          </a>\n        </b>\n        {`- devChallenges.io`}\n      </small>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"components/Aside/Search/Search.css\";\n\nconst Search = ({ sendSearch, searchData, forwardedRef }) => {\n  const { searchParams, setSearchParams } = searchData;\n  const inputRef = useRef(null);\n\n  // handle job searches\n  const handleSearches = (e, searchParams) => {\n    e.preventDefault();\n    if (!inputRef.current.value && !forwardedRef.current.value) return;\n    setSearchParams(searchParams);\n    sendSearch(searchParams);\n    inputRef.current.value = \"\";\n    forwardedRef.current.value = \"\";\n  };\n\n  return (\n    <section className=\"search-section\">\n      <div className=\"search-box\">\n        <form\n          onSubmit={(e) =>\n            handleSearches(e, {\n              ...searchParams,\n              description: inputRef.current.value,\n              location: forwardedRef.current.value,\n              page: 1,\n            })\n          }\n        >\n          <div className=\"input-control search\">\n            <i className=\"material-icons-round\">work_outline</i>\n            <input\n              ref={inputRef}\n              className=\"input-search\"\n              id=\"search\"\n              name=\"search\"\n              type=\"text\"\n              placeholder=\"Title, companies, expertise or benefits\"\n            />\n            <input className=\"submit-search\" type=\"submit\" value=\"Search\" />\n          </div>\n        </form>\n      </div>\n    </section>\n  );\n};\n\nSearch.propTypes = {\n  sendSearch: PropTypes.func.isRequired,\n  searchData: PropTypes.object.isRequired,\n  forwardedRef: PropTypes.object.isRequired,\n};\n\nexport default Search;\n","import PropTypes from 'prop-types';\n\nconst RadioButton = ({\n  className,\n  name,\n  id,\n  label,\n  value,\n  checked,\n  onChange,\n}) => {\n  return (\n    <div className={className}>\n      <input\n        type=\"radio\"\n        name={name}\n        id={`rad-${id}`}\n        value={value}\n        checked={checked}\n        onChange={onChange}\n      />\n      <label htmlFor={`rad-${id}`}>{label}</label>\n    </div>\n  );\n};\n\nRadioButton.propTypes = {\n  className: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  label: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  checked: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default RadioButton;\n","import { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport 'components/Aside/Filter/Filter.css';\nimport RadioButton from 'components/Aside/RadioButton';\n\nconst Filter = forwardRef(({ filterSearch, sendSearch, searchData }, ref) => {\n  const { searchParams, setSearchParams } = searchData;\n\n  // handle value changes\n  const onValueChange = (e) => {\n    setSearchParams({ ...searchParams, location: e.target.value, page: 1 });\n    sendSearch({ ...searchParams, location: e.target.value, page: 1 });\n  };\n\n  // location filter options\n  const cities = ['London', 'Amsterdam', 'New York', 'Berlin'];\n  const filterOptions = cities.map((city, index) => {\n    return (\n      <RadioButton\n        key={index}\n        id={index}\n        className=\"radio-group\"\n        name=\"filterlocation\"\n        label={city}\n        value={city}\n        checked={searchParams.location === city}\n        onChange={onValueChange}\n      />\n    );\n  });\n\n  return (\n    <aside className=\"filter-section\">\n      <div className=\"filter__fulltime\">\n        <form>\n          <input\n            defaultChecked={searchParams.isFulltime}\n            onChange={() => {\n              setSearchParams({\n                ...searchParams,\n                isFulltime: !searchParams.isFulltime,\n              });\n              filterSearch(!searchParams.isFulltime);\n            }}\n            id=\"fulltime\"\n            name=\"fulltime\"\n            type=\"checkbox\"\n          />\n          <label htmlFor=\"fulltime\">Full time</label>\n        </form>\n      </div>\n      <div className=\"filter__search-location\">\n        <form onSubmit={(e) => e.preventDefault()}>\n          <label htmlFor=\"location\">location</label>\n          <div className=\"input-control location\">\n            <i className=\"material-icons-round\">public</i>\n            <input\n              ref={ref}\n              id=\"location\"\n              name=\"location\"\n              type=\"text\"\n              placeholder=\"City, state, zip code or country\"\n            />\n          </div>\n        </form>\n      </div>\n      <div className=\"filter__location\">\n        <form action=\"\">{filterOptions}</form>\n      </div>\n    </aside>\n  );\n});\n\nFilter.propTypes = {\n  filterSearch: PropTypes.func.isRequired,\n  sendSearch: PropTypes.func.isRequired,\n  searchData: PropTypes.object.isRequired,\n};\n\nexport default Filter;\n","export const checkDate = (date) => {\n  const today = new Date().getDate();\n  const created = new Date(date).getDate();\n\n  if (created < today) {\n    let day = today - created;\n    if (day > 1) {\n      return `${day} days ago`;\n    } else {\n      return \"yesterday\";\n    }\n  } else if (created === today) {\n    return \"today\";\n  }\n};\n\n// check url\nconst checkUrl = (searchParams) => {\n  let url = new URL(\"https://jobs.github.com/positions.json\");\n\n  url.search = new URLSearchParams({\n    page: Number(searchParams.page),\n    description: searchParams.description.toLowerCase(),\n    full_time: `${searchParams.isFulltime ? \"true\" : \"\"}`,\n    location: searchParams.location.toLowerCase(),\n  });\n\n  return url;\n};\n\n// retrieve data from GitHub API\nexport const getData = async (params, storeData, storeBackup, load) => {\n  load(true);\n  try {\n    const jsonData = await fetch(checkUrl(params));\n    const data = await jsonData.json();\n    storeBackup(data);\n    storeData(data);\n  } catch (error) {\n    console.log(error);\n  }\n  load(false);\n};\n\n// get user position and get jobs data from github\nexport const getPosition = async ({ coords }) => {\n  let data;\n  try {\n    const jsonData = await fetch(\n      `https://jobs.github.com/positions.json?lat=${coords.latitude}&long=${coords.longitude}`\n    );\n    data = await jsonData.json();\n  } catch (error) {\n    console.log(error);\n  }\n  return data;\n};\n","import PropTypes from \"prop-types\";\nimport \"components/Main/Card/Card.css\";\nimport { checkDate } from \"helpers/helpers\";\n\nconst Card = ({ innerKey, data, id }) => {\n  const { jobId, setJobId } = id;\n\n  const openJobDetails = () => {\n    return setJobId({ id: innerKey, display: !jobId.display });\n  };\n\n  return (\n    <div key={innerKey} className=\"card-container\" onClick={openJobDetails}>\n      <div className=\"card__logo\">\n        {data.company_logo ? (\n          <img src={data.company_logo} alt=\"logo\" />\n        ) : (\n          <span>not found</span>\n        )}\n      </div>\n      <div className=\"card__title\">\n        <span className=\"name\">{data.company}</span>\n        <h2 className=\"title\">{data.title}</h2>\n        {data.type === \"Full Time\" ? (\n          <button className=\"fulltime\">Full time</button>\n        ) : (\n          \"\"\n        )}\n      </div>\n      <div className=\"card__time\">\n        <span>\n          <i className=\"material-icons-round\">public</i>\n          {data.location}\n        </span>\n        <span>\n          <i className=\"material-icons-round\">query_builder</i>\n          {checkDate(data.created_at)}\n        </span>\n      </div>\n    </div>\n  );\n};\n\nCard.propTypes = {\n  innerKey: PropTypes.string.isRequired,\n  data: PropTypes.object.isRequired,\n  id: PropTypes.object.isRequired,\n};\n\nexport default Card;\n","import PropTypes from \"prop-types\";\nimport \"components/Main/Pagination/Pagination.css\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst Pagination = ({\n  currentPage,\n  dataPerPage,\n  totalData,\n  paginate,\n  currentPageAllData,\n  paginateAllData,\n}) => {\n  // to get an array of page numbers\n  let pageNumbers = [];\n  for (let i = 1; i <= Math.ceil(totalData / dataPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  // to navigate page from github API\n  const pageAllData = (key, textIcon, number) => {\n    return (\n      <li key={key} className=\"paginate-control\">\n        <button\n          className={\"paginate-item\"}\n          type=\"button\"\n          onClick={() => paginateAllData(number)}\n        >\n          <i className=\"material-icons-round\">{textIcon}</i>\n        </button>\n      </li>\n    );\n  };\n\n  // to get a neighbor's number\n  const leftNeighbor = pageNumbers[pageNumbers.indexOf(currentPage) - 1];\n  const rightNeighbor = pageNumbers[pageNumbers.indexOf(currentPage) + 1];\n  const pageNeighbors = (neighborNumber) => {\n    return (\n      <li key={neighborNumber} className=\"paginate-control\">\n        <button\n          className={\"paginate-item\"}\n          type=\"button\"\n          onClick={() => paginate(neighborNumber)}\n        >\n          {neighborNumber}\n        </button>\n      </li>\n    );\n  };\n\n  return (\n    <nav className=\"pagination-container\">\n      <ul className=\"paginate-wrapper\">\n        {/* navigate number page all data */}\n        {currentPageAllData > 1\n          ? pageAllData(uuidv4(), \"navigate_before\", currentPageAllData - 1)\n          : \"\"}\n\n        {/* to the first page */}\n        {currentPage !== 2 &&\n        pageNumbers.length > 3 &&\n        currentPage > pageNumbers.length / 2 - 1 ? (\n          <li key={pageNumbers[0]} className=\"paginate-control\">\n            <button\n              className=\"paginate-item\"\n              type=\"button\"\n              onClick={() => paginate(pageNumbers[0])}\n            >\n              {pageNumbers[0]}\n            </button>\n          </li>\n        ) : (\n          \"\"\n        )}\n\n        {/* more icon */}\n        {currentPage !== 2 &&\n        pageNumbers.length > 3 &&\n        currentPage > pageNumbers.length / 2 - 1 ? (\n          <li key={uuidv4()} className=\"paginate-control\">\n            <button className=\"paginate-item more\" type=\"button\">\n              <i className=\"material-icons-round\">more_horiz</i>\n            </button>\n          </li>\n        ) : (\n          \"\"\n        )}\n\n        {/* left neighbor */}\n        {currentPage > pageNumbers[0] ? pageNeighbors(leftNeighbor) : \"\"}\n\n        {/* current page number */}\n        {totalData > dataPerPage ? (\n          <li key={currentPage} className=\"paginate-control\">\n            <button className=\"paginate-item active\" type=\"button\">\n              {currentPage}\n            </button>\n          </li>\n        ) : (\n          \"\"\n        )}\n\n        {/* right neighbor */}\n        {currentPage <= pageNumbers.length - 1\n          ? pageNeighbors(rightNeighbor)\n          : \"\"}\n\n        {/* more icon */}\n        {pageNumbers.length > 3 && currentPage < pageNumbers.length / 2 + 1 ? (\n          <li key={uuidv4()} className=\"paginate-control\">\n            <button className=\"paginate-item more\" type=\"button\">\n              <i className=\"material-icons-round\">more_horiz</i>\n            </button>\n          </li>\n        ) : (\n          \"\"\n        )}\n\n        {/* to the last page */}\n        {pageNumbers.length > 3 && currentPage < pageNumbers.length / 2 + 1 ? (\n          <li\n            key={pageNumbers[pageNumbers.length - 1]}\n            className=\"paginate-control\"\n          >\n            <button\n              className=\"paginate-item\"\n              type=\"button\"\n              onClick={() => paginate(pageNumbers[pageNumbers.length - 1])}\n            >\n              {pageNumbers[pageNumbers.length - 1]}\n            </button>\n          </li>\n        ) : (\n          \"\"\n        )}\n\n        {/* navigate number page all data */}\n        {totalData === 50\n          ? pageAllData(uuidv4(), \"navigate_next\", currentPageAllData + 1)\n          : \"\"}\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  currentPage: PropTypes.number.isRequired,\n  dataPerPage: PropTypes.number.isRequired,\n  totalData: PropTypes.number.isRequired,\n  paginate: PropTypes.func.isRequired,\n  currentPageAllData: PropTypes.number.isRequired,\n  paginateAllData: PropTypes.func.isRequired,\n};\n\nexport default Pagination;\n","import PropTypes from 'prop-types';\nimport 'components/Main/Lists/Lists.css';\nimport Card from 'components/Main/Card/Card';\nimport Pagination from 'components/Main/Pagination/Pagination';\n\nconst Lists = ({ data, jobId, pagination }) => {\n  // component card rendering\n  const renderCard = data.map((job) => {\n    return <Card key={job.id} innerKey={job.id} data={job} id={jobId} />;\n  });\n\n  return (\n    <section className=\"list-section\">\n      <div className=\"list__cards\">{renderCard}</div>\n      <div className=\"list__pagination\">\n        <Pagination\n          currentPage={pagination.currentPage}\n          dataPerPage={pagination.dataPerPage}\n          totalData={pagination.backupData.length}\n          paginate={pagination.paginate}\n          currentPageAllData={pagination.searchParams.page}\n          paginateAllData={pagination.paginateAllData}\n        />\n      </div>\n    </section>\n  );\n};\n\nLists.propTypes = {\n  data: PropTypes.array.isRequired,\n  jobId: PropTypes.object.isRequired,\n  pagination: PropTypes.object.isRequired,\n};\n\nexport default Lists;\n","import { useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"components/Main/InnerPage/InnerPage.css\";\nimport { checkDate } from \"helpers/helpers\";\n\nconst InnerPage = ({ id, allData, pageState }) => {\n  // filtering data\n  const data = allData.filter((data) => data.id === id)[0];\n\n  // element reference\n  const descRef = useRef(null);\n  const emailRef = useRef(null);\n\n  // handle closing the page\n  const handleClosePage = () => {\n    return pageState({ id: \"\", display: false });\n  };\n\n  // uses effects to send data to an element\n  useEffect(() => {\n    descRef.current.innerHTML = data.description;\n    emailRef.current.innerHTML = data.how_to_apply;\n  }, [data]);\n\n  return (\n    <main className=\"main-container\">\n      <aside className=\"aside\">\n        <div className=\"back-button\">\n          <button type=\"submit\" onClick={handleClosePage}>\n            <i className=\"material-icons-round\">arrow_right_alt</i>Back to\n            search\n          </button>\n        </div>\n        <div className=\"aside-email\">\n          <h2>how to apply</h2>\n          <div id=\"email\" ref={emailRef} className=\"email-wrapper\"></div>\n        </div>\n      </aside>\n      <section className=\"detail-section\">\n        <div className=\"detail__title\">\n          <div className=\"title-wrapper\">\n            <h2 className=\"title\">{data.title}</h2>\n            <button className=\"fulltime\">Full time</button>\n          </div>\n          <span className=\"created\">\n            <i className=\"material-icons-round\">query_builder</i>\n            {checkDate(data.created_at)}\n          </span>\n        </div>\n        <div className=\"detail__company\">\n          <div className=\"logo\">\n            {data.company_logo ? (\n              <img src={data.company_logo} alt=\"logo\" />\n            ) : (\n              <span>not found</span>\n            )}\n          </div>\n          <div className=\"company-wrapper\">\n            <span className=\"name\">{data.company}</span>\n            <span className=\"location\">\n              <i className=\"material-icons-round\">public</i>\n              {data.location}\n            </span>\n          </div>\n        </div>\n        <div ref={descRef} className=\"detail__description\"></div>\n      </section>\n    </main>\n  );\n};\n\nInnerPage.propTypes = {\n  id: PropTypes.string.isRequired,\n  allData: PropTypes.array.isRequired,\n  pageState: PropTypes.func.isRequired,\n};\n\nexport default InnerPage;\n","import { useEffect, useState, useRef } from 'react';\nimport Footer from 'components/Footer/Footer';\nimport Search from 'components/Aside/Search/Search';\nimport Filter from 'components/Aside/Filter/Filter';\nimport Lists from 'components/Main/Lists/Lists';\nimport InnerPage from 'components/Main/InnerPage/InnerPage';\nimport { getData, getPosition } from 'helpers/helpers';\nimport { useLoading, ThreeDots } from '@agney/react-loading';\n\nconst App = () => {\n  // react state for loading indicator\n  const [isLoading, setIsLoading] = useState(false);\n  const { containerProps, indicatorEl } = useLoading({\n    loading: true,\n    indicator: <ThreeDots width=\"50\" />,\n  });\n\n  // react state for job application\n  const [allData, setAllData] = useState(null);\n  const [backupData, setBackupData] = useState(null);\n  const [dataPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [jobId, setJobId] = useState({\n    id: '',\n    display: false,\n  });\n  const [searchParams, setSearchParams] = useState({\n    description: '',\n    location: '',\n    isFulltime: false,\n    page: 1,\n  });\n\n  // get user location\n  const getUserLocation = async () => {\n    let data;\n    if (navigator.geolocation) {\n      try {\n        data = await navigator.geolocation.getCurrentPosition(getPosition);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    return data;\n  };\n\n  // filter data by full time type\n  const fulltimeFilter = (isFulltime) => {\n    if (isFulltime) {\n      return setAllData(allData.filter((data) => data.type === 'Full Time'));\n    } else {\n      return setAllData(backupData);\n    }\n  };\n\n  // to handle the search\n  const inputLocationRef = useRef(null);\n  const sendSearch = (searchParams) => {\n    setCurrentPage(1);\n    getData(searchParams, setAllData, setBackupData, setIsLoading);\n  };\n\n  // change the page number\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n  const paginateAllData = (number) => {\n    setSearchParams({ ...searchParams, page: number });\n    setCurrentPage(1);\n    getData(\n      { ...searchParams, page: number },\n      setAllData,\n      setBackupData,\n      setIsLoading\n    );\n  };\n\n  // use effect to get data from API\n  useEffect(() => {\n    const getAllData = async () => {\n      if (!allData) {\n        try {\n          const data = await getUserLocation();\n          if (!data)\n            return getData(\n              searchParams,\n              setAllData,\n              setBackupData,\n              setIsLoading\n            );\n          setBackupData(data);\n          setAllData(data);\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    };\n    getAllData();\n  });\n\n  // get current data\n  let currentData;\n  if (allData) {\n    const indexLast = currentPage * dataPerPage;\n    const indexFirst = indexLast - dataPerPage;\n    currentData = allData.slice(indexFirst, indexLast);\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <div className=\"app-logo\">\n          <span>Github</span> <span>Jobs</span>\n        </div>\n      </header>\n      {jobId.display ? (\n        <InnerPage id={jobId.id} allData={allData} pageState={setJobId} />\n      ) : (\n        <main>\n          <Search\n            sendSearch={sendSearch}\n            searchData={{ searchParams, setSearchParams }}\n            forwardedRef={inputLocationRef}\n          />\n          <Filter\n            ref={inputLocationRef}\n            filterSearch={fulltimeFilter}\n            sendSearch={sendSearch}\n            searchData={{ searchParams, setSearchParams }}\n          />\n          {isLoading ? (\n            <div className=\"load-animation\" {...containerProps}>\n              {indicatorEl}\n            </div>\n          ) : allData && allData.length < 1 ? (\n            <div className=\"not-found\">No results found</div>\n          ) : currentData ? (\n            <Lists\n              data={currentData}\n              jobId={{ jobId, setJobId }}\n              pagination={{\n                currentPage,\n                dataPerPage,\n                backupData,\n                paginate,\n                searchParams,\n                paginateAllData,\n              }}\n            />\n          ) : (\n            <div></div>\n          )}\n        </main>\n      )}\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import \"styles/index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}